{
    "name": "nim",
    "displayName": "Nim",
    "description": "Nim language support for Visual Studio Code",
    "version": "0.6.4",
    "publisher": "kosz78",
    "author": {
        "name": "Xored Software Inc."
    },
    "license": "MIT",
    "icon": "images/nim_icon.png",
    "homepage": "https://github.com/pragmagic/vscode-nim/blob/master/README.md",
    "categories": [
        "Programming Languages",
        "Linters"
    ],
    "galleryBanner": {
        "color": "#2C2A35",
        "theme": "dark"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/pragmagic/vscode-nim.git"
    },
    "bugs": {
        "url": "https://github.com/pragmagic/vscode-nim/issues"
    },
    "scripts": {
        "vscode:prepublish": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "lint": "node ./node_modules/tslint/bin/tslint ./src/*.ts ./test/*.ts"
    },
    "dependencies": {
        "nedb": "1.8.0"
    },
    "devDependencies": {
        "@types/mocha": "^5.2.7",
        "@types/node": "^10.14.19",
        "tslint": "^5.20.0",
        "typescript": "^2.6.1",
        "vscode": "^1.1.36"
    },
    "extensionDependencies": [
        "ms-vscode.cpptools"
    ],
    "engines": {
        "vscode": "^1.27.0"
    },
    "activationEvents": [
        "onLanguage:nim",
        "onLanguage:nimcfg",
        "onLanguage:nimble",
        "onCommand:nim.build",
        "onCommand:nim.run",
        "onCommand:nim.runTest",
        "onCommand:nim.execSelectionInTerminal"
    ],
    "main": "./out/nimMain",
    "contributes": {
        "languages": [
            {
                "id": "nim",
                "aliases": [
                    "Nim",
                    "nim"
                ],
                "extensions": [
                    ".nim",
                    ".nims",
                    "nim.cfg",
                    ".nim.cfg"
                ],
                "configuration": "./nimcfg.json"
            },
            {
                "id": "nimble",
                "aliases": [
                    "Nimble",
                    "nimble"
                ],
                "extensions": [
                    ".nimble"
                ],
                "configuration": "./nimcfg.json"
            }
        ],
        "grammars": [
            {
                "language": "nim",
                "scopeName": "source.nim",
                "path": "./syntaxes/nim.json"
            },
            {
                "language": "nimble",
                "scopeName": "source.nimble",
                "path": "./syntaxes/nimble.json"
            }
        ],
        "commands": [
            {
                "command": "nim.run.file",
                "title": "Run selected Nim file",
                "category": "Nim"
            },
            {
                "command": "nim.check",
                "title": "Check Nim project",
                "category": "Nim"
            },
            {
                "command": "nim.execSelectionInTerminal",
                "title": "Run Selection/Line in Nim Terminal",
                "category": "Nim"
            }
        ],
        "menus": {
            "editor/context": [
                {
                    "when": "editorLangId == 'nim'",
                    "command": "nim.run.file",
                    "group": "run@1"
                }
            ]
        },
        "keybindings": [
            {
                "key": "F6",
                "command": "nim.run.file",
                "when": "editorLangId == 'nim'"
            },
            {
                "key": "ctrl+alt+b",
                "command": "nim.check",
                "when": "editorLangId == 'nim'"
            },
            {
                "key": "shift+enter",
                "command": "nim.execSelectionInTerminal",
                "when": "editorFocus && editorLangId == nim && !findInputFocussed && !replaceInputFocussed"
            }
        ],
        "configuration": {
            "type": "object",
            "title": "Nim configuration",
            "properties": {
                "nim.project": {
                    "type": "array",
                    "default": [],
                    "description": "Nim project file, if empty use current selected."
                },
                "nim.test-project": {
                    "type": "string",
                    "default": "",
                    "description": "Optional test project."
                },
                "nim.buildOnSave": {
                    "type": "boolean",
                    "default": false,
                    "description": "Execute build task from tasks.json file on save."
                },
                "nim.buildCommand": {
                    "type": "string",
                    "default": "c",
                    "description": "Nim build command (c, cpp, doc, etc)"
                },
                "nim.runOutputDirectory": {
                    "type": "string",
                    "default": "",
                    "description": "Output directory for run selected file command. The directory is relative to the workspace root."
                },
                "nim.lintOnSave": {
                    "type": "boolean",
                    "default": true,
                    "description": "Check code by using 'nim check' on save."
                },
                "nim.enableNimsuggest": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable calling nimsuggest process to provide completion suggestions, hover suggestions, etc.\nThis option requires restart to take effect."
                },
                "nim.logNimsuggest": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable verbose logging of nimsuggest to use profile directory."
                },
                "nim.licenseString": {
                    "type": "string",
                    "default": "",
                    "description": "Optional license text that will be inserted on nim file creation."
                },
                "nim.nimsuggestRestartTimeout": {
                    "type": "integer",
                    "default": 60,
                    "description": "Nimsuggest will be restarted after this timeout in minutes, if 0 then restart disabled.\nThis option requires restart to take effect."
                },
                "nim.typeCasing": {
                    "type": "string",
                    "default": "as-is",
                    "description": "The casing of types and type aliases",
                    "enum": [
                        "as-is",
                        "pascal-camel",
                        "snake"
                    ]
                },
                "nim.moduleCasing": {
                    "type": "string",
                    "default": "as-is",
                    "description": "The casing of modules",
                    "enum": [
                        "as-is",
                        "pascal-camel",
                        "snake"
                    ]
                },
                "nim.procLikeCasing": {
                    "type": "string",
                    "default": "as-is",
                    "description": "The casing of procs, templates, macros and iterators",
                    "enum": [
                        "as-is",
                        "pascal-camel",
                        "snake"
                    ]
                },
                "nim.constantCasing": {
                    "type": "string",
                    "default": "as-is",
                    "description": "The casing of constants",
                    "enum": [
                        "as-is",
                        "pascal-camel",
                        "snake"
                    ]
                },
                "nim.enumFieldCasing": {
                    "type": "string",
                    "default": "as-is",
                    "description": "The casing of enum fields",
                    "enum": [
                        "as-is",
                        "pascal-camel",
                        "snake"
                    ]
                },
                "nim.variableCasing": {
                    "type": "string",
                    "default": "as-is",
                    "description": "The casing of var, let, parameters, result and object/tuple fields",
                    "enum": [
                        "as-is",
                        "pascal-camel",
                        "snake"
                    ]
                }
            }
        },
        "breakpoints": [
            {
                "language": "nim"
            }
        ],
        "snippets": [
            {
                "language": "nim",
                "path": "./snippets/nim.json"
            }
        ]
    }
}
